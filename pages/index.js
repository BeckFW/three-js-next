import * as THREE from 'three'
import React, { Suspense, useRef } from 'react'
import { Canvas, useFrame, useThree } from '@react-three/fiber'
import { XR, VRButton, ARButton, XRButton, useXREvent } from '@react-three/xr'
import { Html, Environment, useGLTF, ContactShadows, OrbitControls, Text } from '@react-three/drei'
import ThreeContent from '../components/ThreeContent'

function Model(props) {
  const group = useRef()
  // Load model
  const { nodes, materials } = useGLTF('/mac-draco.glb')
  // Make it float
  /*
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
    
  })*/
  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0, 0]} rotation={[0, 0.3, 0]}>
        {' '}
        {/* Plane Mesh that HTML Content anchors too. Controls HTML position/rotation. */}
        <mesh>
          {/* Drei's HTML component can "hide behind" canvas geometry */}
          <Html className="content" rotation-x={0} scale={100} position={[0, 0, 0]} transform >
            <div className="wrapper" onPointerDown={(e) => e.stopPropagation()}>
              <div className='relative w-full text-center flex'>
              <ThreeContent/>
              </div>
            </div>
          </Html>
        </mesh>
      </group>
    </group>
  )
}

function Box({ color, size, scale, children }) {
  return (
    <mesh scale={scale}>
      <boxGeometry args={size} />
      <meshPhongMaterial color={color} />
      {children}
    </mesh>
  )
}

const Button = (props) => {
  return (
    <Box color={"#0000FF"} scale={[0.5, 0.5, 0.5]} size={[0.4, 0.1, 0.1]}>
        <Suspense fallback={null}>
          <Text position={[0, 0, 0.06]} fontSize={0.05} color="#000" anchorX="center" anchorY="middle">
            Hello react-xr!
          </Text>
        </Suspense>
      </Box>
  )
}

export default function App() {

  {/*
  return (
    <>
    <div style={{zIndex: 1000, position: "relative"}}>
    <ARButton />
  </div>
    <Canvas 
      style={{ position: 'absolute', top: 0, left: 0 }} 
      camera={{ position: [-5, 0, -15], fov: 55, zoom: 5}}
      >
      <XR referenceSpace='local'>
      <pointLight position={[10, 10, 10]} intensity={1.5} />
      <Suspense fallback={null}>
        <group rotation={[0, Math.PI, 0]} position={[0, 1, 0]}>
          <Model />
        </group>
      </Suspense>
      <ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} />
      <OrbitControls enablePan={false} enableZoom={false} minPolarAngle={Math.PI / 2.2} maxPolarAngle={Math.PI / 2.2} />
      </XR>
    </Canvas>
    <div id='e'>OK</div>
    </>
  )
  */}

  return (
    <>
      <ARButton />
      <Canvas>
        <XR>
          <mesh>
            <boxGeometry />
            <meshBasicMaterial color="blue" />
          </mesh>
        </XR>
      </Canvas>
    </>
  )
}
